{"version":3,"file":"static/js/718.e8ebc9f6.chunk.js","mappings":"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","sources":["components/Forms/LoginForm/Mui.jsx","components/Forms/LoginForm/LoginForm.styled.jsx","components/Forms/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst ButtonLogin = styled(Button)`\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  text-transform: none;\r\n  background-color: #fc842d;\r\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\r\n  border-radius: 30px;\r\n  margin: auto;\r\n  padding: 13px 57px;\r\n  width: 181px;\r\n  margin-top: 60px;\r\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n\r\n  &:hover {\r\n    background-color: #e76000;\r\n    transform: scale(1.05);\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    margin: 60px 0 0;\r\n  }\r\n`;\r\nconst ButtonRegistration = styled(ButtonLogin)`\r\n  display: flex;\r\n  color: #fc842d;\r\n  background-color: #ffffff;\r\n  border: 2px solid #fc842d;\r\n  padding: 11px 69px;\r\n  box-shadow: none;\r\n  width: 182px;\r\n  margin-top: 20px;\r\n  box-shadow: 0px 4px 10px rgb(252 132 45 / 50%);\r\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n    border 250mscubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n\r\n  &:hover {\r\n    background-color: #ffffff;\r\n    border: 2px solid #e76000;\r\n    transform: scale(1.05);\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 215px;\r\n  }\r\n`;\r\nconst CastomTextField = styled(TextField)({\r\n  '& ': {\r\n    marginBottom: '20px',\r\n    minWidth: '240px',\r\n  },\r\n  '& label': {\r\n    color: '#9B9FAA',\r\n    fontFamily: 'Verdana',\r\n    fontWeight: 700,\r\n    fontSize: '14px',\r\n    lineHeight: '1.2',\r\n    letterSpacing: '0.04em',\r\n  },\r\n  '& label.Mui-focused': {\r\n    color: '#FC842D',\r\n  },\r\n  '& .MuiInput-underline:before': {\r\n    borderBottom: '1px solid #E0E0E0',\r\n  },\r\n\r\n  '& .MuiInput-underline:after': {\r\n    borderBottomColor: '#FC842D',\r\n  },\r\n});\r\n\r\nexport { ButtonLogin, CastomTextField, ButtonRegistration };\r\n","import styled from 'styled-components/macro';\r\n\r\nconst MainContainer = styled.div`\r\n\r\nbackground-color:blue;\r\n /* width: 300px; \r\n  padding: 40px 15px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\r\n    width: ${({ theme: { breakpoints } }) => breakpoints.tablet};\r\n    padding-left: ${({ theme: { spacing } }) => spacing(8)};\r\n    padding-right: ${({ theme: { spacing } }) => spacing(8)};\r\n  }\r\n\r\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.desktop}) {\r\n    width: ${({ theme: { breakpoints } }) => breakpoints.desktop};\r\n  } */\r\n`;\r\n\r\nconst Form = styled.form`\r\nmin-width: 280px;\r\ndisplay:flex;\r\nflex-direction:column;\r\n@media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\r\n  align-items: start;\r\n\r\n }\r\n\r\n`;\r\n\r\n\r\nexport { MainContainer, Form };","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { CastomTextField } from './Mui';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from 'redux/auth/authOperations';\r\nimport { ButtonLogin } from './Mui';\r\nimport { Form } from './LoginForm.styled';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst LoginForm = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const validationSchema = yup.object({\r\n    email: yup\r\n      .string(t('validation.emailString'))\r\n      .email(t('validation.emailValid'))\r\n      .required(t('validation.email')),\r\n    password: yup\r\n      .string(t('validation.passwordString'))\r\n      .min(8, t('validation.passwordMin'))\r\n      .required(t('validation.password')),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: (values, { resetForm }) => {\r\n      const payload = {\r\n        email: values.email,\r\n        password: values.password,\r\n      };\r\n\r\n      dispatch(logIn(payload));\r\n      resetForm({ values: '' });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <CastomTextField\r\n          variant=\"standard\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label={t('email')}\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <CastomTextField\r\n          variant=\"standard\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label={t('password')}\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        <ButtonLogin color=\"primary\" variant=\"contained\" type=\"submit\">\r\n          {t('logIn')}\r\n        </ButtonLogin>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import styled from 'styled-components/macro';\r\n\r\nconst PageContainer = styled.div`\r\n  padding-bottom: 175px;\r\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\r\n    padding-bottom: 495px;\r\n\r\n    @media (max-width: 1279px) and (orientation: landscape) {\r\n      padding-bottom: ${({ theme: { spacing } }) => spacing(28)};\r\n    }\r\n  }\r\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.desktop}) {\r\n    padding-bottom: 255px;\r\n  }\r\n`;\r\n\r\nconst BoxRelative = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  padding-top: 40px;\r\n  font-family: ${({ theme: { fonts } }) => fonts.gothamPro};\r\n  text-transform: uppercase;\r\n  color: ${({ theme: { colors } }) => colors.$orange};\r\n  text-align: center;\r\n  margin-bottom: 60px;\r\n\r\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\r\n    padding-top: 160px;\r\n  }\r\n\r\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\r\n    text-align: start;\r\n  }\r\n`;\r\n\r\n\r\nexport {\r\n  PageContainer,\r\n  Title,\r\n  BoxRelative,\r\n };\r\n","import { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { ButtonRegistration } from 'components/Forms/LoginForm/Mui';\r\nimport LoginForm from '../../components/Forms/LoginForm';\r\nimport { PageContainer, Title, BoxRelative } from './LoginPage.styled';\r\nimport Container from 'components/Container';\r\nimport Navigation from 'components/Header/Navigation';\r\nimport { getIsLoggedIn } from 'redux/auth/authSelector';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst styles = {\r\n  isHidden: {\r\n    display: 'none',\r\n  },\r\n};\r\n\r\nconst LoginPage = () => {\r\n  const isLogged = useSelector(state => getIsLoggedIn(state));\r\n  const { t } = useTranslation();\r\n  useEffect(() => {\r\n    document.title = t('routes.login');\r\n  }, [t]);\r\n\r\n  return (\r\n    <Container>\r\n      <PageContainer>\r\n        {isLogged && (\r\n          <>\r\n            <Navigation stylehidden={styles.isHidden} />\r\n          </>\r\n        )}\r\n        <BoxRelative>\r\n          <Title>{t('signIn')}</Title>\r\n          <LoginForm />\r\n          <NavLink to=\"/signup\">\r\n            <ButtonRegistration\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              type=\"button\"\r\n            >\r\n              {t('register')}\r\n            </ButtonRegistration>\r\n          </NavLink>\r\n        </BoxRelative>\r\n      </PageContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["ButtonLogin","styled","Button","_templateObject","_taggedTemplateLiteral","ButtonRegistration","_templateObject2","CastomTextField","TextField","marginBottom","minWidth","color","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","borderBottom","borderBottomColor","Form","div","withConfig","displayName","componentId","form","_ref","theme","breakpoints","tablet","t","useTranslation","validationSchema","yup","email","required","password","min","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","resetForm","payload","logIn","_jsx","children","_jsxs","handleSubmit","variant","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","autoComplete","PageContainer","_ref2","spacing","_ref3","desktop","BoxRelative","Title","h1","_ref4","fonts","gothamPro","_ref5","colors","$orange","_ref6","_ref7","styles","isHidden","display","isLogged","useSelector","state","getIsLoggedIn","useEffect","document","title","Container","_Fragment","Navigation","stylehidden","LoginForm","NavLink","to"],"sourceRoot":""}